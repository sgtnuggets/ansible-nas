---

auth_enabled: false

server:
  http_listen_port: {{ loki_http_port }}
  grpc_listen_port: 9096

# The path_prefix is still needed for local storage of things like the KV store.
common:
  path_prefix: /loki
  ring:
    kvstore:
      store: inmemory
  replication_factor: 1

# Storage configuration for your MinIO (S3-compatible) instance.
storage_config:
  boltdb_shipper:
    # Directory to store the active index files locally before shipping to MinIO.
    active_index_directory: /loki/index
    # Directory for index cache.
    cache_location: /loki/cache
    # Use s3 for the shared store.
    # shared_store: s3
  aws:
    # The s3 block specifies the S3-compatible backend (MinIO).
    # Use `http` or `https` for your MinIO endpoint.
    # Format: `http://<access_key>:<secret_key>@<minio_host>:<port>/<bucket_name>`
    # Example: http://minioadmin:minioadmin@minio:9000/loki
    # Note: For Docker Compose, `minio` would be the service name.
    s3: "http://{{ minio_admin_username }}:{{ minio_admin_password }}@zima:{{ minio_api_port }}/loki-data"
    # Tell Loki to use MinIO's path-style addressing instead of subdomain.
    s3forcepathstyle: true
    # You can specify a region, but it might not be required for MinIO.
    # If MinIO is not running with SSL/TLS, set this to true.
    insecure: true

# Retention policy. The compactor will enforce this.
limits_config:
  retention_period: {{ loki_log_retention }}

# Schema configuration.
schema_config:
  configs:
    - from: 2020-05-15
      store: tsdb
      # Set the object_store to s3.
      object_store: s3
      schema: v13
      index:
        prefix: index_
        period: 24h

# # The compactor now needs access to the s3 store.
compactor:
  working_directory: /loki/compactor
  shared_store: s3
  retention_enabled: true


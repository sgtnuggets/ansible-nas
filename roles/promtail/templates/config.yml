---
server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /data/positions.yml

clients:
  - url: {{ promtail_loki_url }}
    tenant_id: 1

scrape_configs:
  - job_name: docker_scrape
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
    relabel_configs:
      - target_label: hostname
        replacement: '{{ ansible_nas_hostname }}'  # Use the hostname from Ansible
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)'
        target_label: 'container'
    pipeline_stages:
      - regex:
          expression: '^\[(?P<level>[A-Za-z]+)\]'
      - replace:
          expression: '(?i)info'
          replace: info
          source: level
      - replace:
          expression: '(?i)warn'
          replace: warning
          source: level
      - replace:
          expression: '(?i)error'
          replace: error
          source: level
{% if plex_enabled %}
  - job_name: plex
    static_configs:
      - targets:
          - localhost
        labels:
          job: plex
          __path__: /plex/**/*.log
          hostname: "{{ ansible_nas_hostname }}"
          service_name: plex
          container: plex
    pipeline_stages:
      - regex:
          expression: '^(?P<ts>\w{3} \w{3} [0-9]{1,2} [0-9:]{8}\.[0-9]{3}) (?P<level>[A-Z]+) (?P<component>[^:]+): (?P<msg>.*)'
      - timestamp:
          source: ts
          format: Jan _2 15:04:05.000
      - labels:
          level:
          component:
{% endif %}
{% if ddwrt_enabled %}
  - job_name: ddwrt
    syslog:
      listen_address: 0.0.0.0:1514  # Promtail listens on this port for syslog messages
      idle_timeout: 60s
      label_structured_data: true
    relabel_configs:
      - target_label: hostname
        replacement: "{{ ansible_nas_hostname }}"  # Use the hostname from Ansible
      - target_label: job
        replacement: "ddwrt"
      - target_label: router
        replacement: "{{ ddwrt_router_name }}"  # Replace with your router's name
    pipeline_stages:
      - regex:
          expression: '<[0-9]+>(?P<ts>[A-Za-z]{3} [0-9]{1,2} [0-9:]{8}) (?P<hostname>[^ ]+) (?P<msg>.*)'
      - timestamp:
          source: ts
          format: Jan _2 15:04:05
      - labels:
          hostname:
      - output:
          source: msg
{% endif %}